<?php
/**
 * @file
 * Proxecto13, Módulo do Curso de Druapl Avanzado OSL 2014
 */

/**
 * Implements hook_page_alter().
 */
function proxecto13_page_alter(&$page) {
  global $base_url;

  // Páxinas nas que se oculta o lateral esquerdo.
  $pages = array(
    'proxecto13/404',
    'proxecto13/403',
    'proxecto13/cron',
  );

  if (in_array(current_path(), $pages)) {
    unset($page['sidebar_first']);
  }
}

/**
 * Implements hook_menu().
 */
function proxecto13_menu() {
  // Páxina principal.
  $items['proxecto13'] = array(
    'title' => 'Proxecto 13',
    'page callback' => 'proxecto13_callback',
    'file' => 'inc/proxecto13_callback.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // Formulario de modificar contorno.
  $items['proxecto13/contorno'] = array(
    'title' => 'Modificar Contorno',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('proxecto13_form_contorno'),
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
  );

  // Formulario para engadir usuario.
  $items['proxecto13/usuario'] = array(
    'title' => 'Engadir Usuario',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('proxecto13_form_usuario'),
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
  );

  // Páxina 404.
  $items['proxecto13/404'] = array(
    'title' => '404 not found',
    'page callback' => 'proxecto13_404_callback',
    'file' => 'inc/proxecto13_40X_callback.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // Página 403.
  $items['proxecto13/403'] = array(
    'title' => '403 forbidden',
    'page callback' => 'proxecto13_403_callback',
    'file' => 'inc/proxecto13_40X_callback.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // Executa CRON.
  $items['proxecto13/cron'] = array(
    'title' => 'Execución CRON',
    'page callback' => 'proxecto13_cron_callback',
    'file' => 'inc/proxecto13_cron_callback.inc',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
  );

  return $items;
}

/**
 * Implements hook_cron_ajax().
 */
/*function proxecto13_cron_ajax() {
  // Executar o cron.
  $result = drupal_cron_run();

  // Datos para enviar en formato json.
  $data = array(
    'success'   => $result,
    'cron_last' => date('d/m/Y H:i:s', variable_get('cron_last')),
  );

  drupal_json_output($data);
}*/

/**
 * Implements hook_menu().
 */
function proxecto13_theme($existing, $type, $theme, $path) {
  global $base_url;

  return array(
    'proxecto13' => array(
      'template' => 'theme/proxecto13',
      'variables' => array(
        'base_url'   => $base_url,

        'user'       => NULL,
        'acceso'     => NULL,
        'picture'    => NULL,

        'localidade' => NULL,
        'enderezo'   => NULL,
        'idade'      => NULL,
        'telefono'   => NULL,

        'site_name'   => NULL,
        'site_slogan' => NULL,

        'admin' => NULL,
        'install_profile' => NULL,
        'cron_last' => NULL,
        'cron_key' => NULL,
        'site_404' => NULL,
        'site_403' => NULL,
      ),
      'path' => drupal_get_path('module', 'proxecto13'),
    ),
    'proxecto13-404' => array(
      'template' => 'theme/proxecto13-404',
      'variables' => array(
        'base_url' => $base_url,
      ),
      'path' => drupal_get_path('module', 'proxecto13'),
    ),
    'proxecto13-403' => array(
      'template' => 'theme/proxecto13-403',
      'variables' => array(
        'base_url' => $base_url,
      ),
      'path' => drupal_get_path('module', 'proxecto13'),
    ),
    'proxecto13-cron' => array(
      'template' => 'theme/proxecto13-cron',
      'variables' => array(
        'base_url' => $base_url,
        'success' => NULL,
        'cron_last' => NULL,
      ),
      'path' => drupal_get_path('module', 'proxecto13'),
    ),

  );

}

/**
 * Implements hook_form().
 */
function proxecto13_form_contorno($node, &$form_state) {
  $site_name   = variable_get('site_name', '');
  $site_slogan = variable_get('site_slogan', '');

  // Yoda expressions: Comparar tu puedes, padawan!
  $site_404 = ('' !== variable_get('site_404', ''));
  $site_403 = ('' !== variable_get('site_403', ''));

  $form['nome'] = array(
    '#title'         => t('Nome do sitio'),
    '#type'          => 'textfield',
    '#required'      => TRUE,
    '#description'   => t('Nome do sitio'),
    '#default_value' => $site_name,
  );

  $form['slogan'] = array(
    '#title'         => t('Slogan do sitio'),
    '#type'          => 'textfield',
    '#description'   => t('Slogan do sitio'),
    '#default_value' => $site_slogan,
  );

  $form['on404'] = array(
    '#title'         => t('Activar páxina 404'),
    '#type'          => 'checkbox',
    '#default_value' => $site_404,
  );

  $form['on403'] = array(
    '#title'         => t('Activar páxina 403'),
    '#type'          => 'checkbox',
    '#default_value' => $site_403,
  );

  $form['submit'] = array(
    '#type'  => 'submit',
    '#attributes' => array(
      'class' => array('btn btn-primary'),
    ),
    '#value' => t('Gardar'),
  );

  $form['cancel'] = array(
    '#type'  => 'link',
    '#href'  => 'proxecto13',
    '#title'  => t('Cancelar'),
  );

  return $form;
}

/**
 * Implements hook_form_validate().
 *
 * Implementa a validación para o formulario de contorno.
 * Sen uso.
 */
function proxecto13_form_contorno_validate($form, &$form_state) {
  // Neste caso non realizamos validacións.
}

/**
 * Implements hook_form().
 *
 * Implementa o submit do envío do formulario de contorno.
 */
function proxecto13_form_contorno_submit($form, &$form_state) {
  $site_name = check_plain($form_state['values']['nome']);
  variable_set('site_name', $site_name);

  $site_slogan = check_plain($form_state['values']['slogan']);
  variable_set('site_slogan', $site_slogan);

  if (!empty($form_state['values']['on404'])) {
    variable_set('site_404', 'proxecto13/404');
  }
  else {
    variable_set('site_404', '');
  }

  if (!empty($form_state['values']['on403'])) {
    variable_set('site_403', 'proxecto13/403');
  }
  else {
    variable_set('site_403', '');
  }

  drupal_set_message(t('Valores do contorno gardados correctamente.'), 'status');
  drupal_goto('proxecto13');
}

/**
 * Implements hook_form().
 *
 * Implementa o formulario para engadir usuario.
 */
function proxecto13_form_usuario($node, &$form_state) {

  $form['user_name'] = array(
    '#title'       => t('Nome de usuario'),
    '#type'        => 'textfield',
    '#required'    => TRUE,
    '#description' => t('Nome de usuario'),
  );

  $form['mail'] = array(
    '#title'       => t('Email'),
    '#type'        => 'textfield',
    '#required'    => TRUE,
    '#description' => t('Enderezo electrónico'),
  );

  $form['enderezo'] = array(
    '#title'       => t('Enderezo'),
    '#type'        => 'textfield',
    '#description' => t('Enderezo'),
  );

  $form['localidade'] = array(
    '#title'       => t('Localidade'),
    '#type'        => 'textfield',
    '#description' => t('Localidade'),
  );

  $form['idade'] = array(
    '#title'       => t('Idade'),
    '#type'        => 'textfield',
    '#description' => t('Idade'),
  );

  $form['telefono'] = array(
    '#title'       => t('Teléfono'),
    '#type'        => 'textfield',
    '#description' => t('Teléfono'),
  );

  $form['submit'] = array(
    '#type'  => 'submit',
    '#attributes' => array(
      'class' => array('btn btn-primary'),
    ),
    '#value' => t('Enviar'),
  );

  $form['cancel'] = array(
    '#type'  => 'link',
    '#href'  => 'proxecto13',
    '#title'  => t('Cancelar'),
  );

  return $form;
}

/**
 * Implements hook_form_validate().
 *
 * Implementa a validación do formulario de engadir usuario.
 */
function proxecto13_form_usuario_validate($form, &$form_state) {

  if ($error = user_validate_name($form_state['values']['user_name'])) {
    form_set_error('user_name', $error);
  }

  if ($error = user_validate_mail($form_state['values']['mail'])) {
    form_set_error('mail', $error);
  }

}

/**
 * Implements hook_form_submit().
 *
 * Implementa a funcionalidade de submit do formulario de engadir usuario.
 */
function proxecto13_form_usuario_submit($form, &$form_state) {
  require DRUPAL_ROOT . '/includes/password.inc';

  // Limpar os datos que veñen no formulario.
  $user_name  = check_plain($form_state['values']['user_name']);
  $mail       = check_plain($form_state['values']['mail']);
  $enderezo   = check_plain($form_state['values']['enderezo']);
  $localidade = check_plain($form_state['values']['localidade']);
  $idade      = check_plain($form_state['values']['idade']);
  $telefono   = check_plain($form_state['values']['telefono']);

  // Crear obxecto cos campos de usuario.
  $account = new stdClass();
  $account->is_new = TRUE;
  $account->name = $user_name;
  $account->pass = user_hash_password('12345');
  $account->mail = $mail;
  $account->init = $mail;
  $account->status = TRUE;
  $account->roles = array(DRUPAL_AUTHENTICATED_RID => TRUE);
  $account->timezone = variable_get('date_default_timezone', 'Europe/Madrid');

  // Campos adicionais do perfil.
  $edit = array();
  $edit['field_enderezo'][LANGUAGE_NONE][0]['value']   = $enderezo;
  $edit['field_localidade'][LANGUAGE_NONE][0]['value'] = $localidade;
  $edit['field_idade'][LANGUAGE_NONE][0]['value']      = $idade;
  $edit['field_telefono'][LANGUAGE_NONE][0]['value']   = $telefono;

  // Capturamos calquera exception que poida ocurrir no proceso.
  try {
    if (FALSE !== user_save($account, $edit)) {
      // Usuario creado correctamente.
      $vars = array('%user_name' => $user_name);
      drupal_set_message(t('Usuario %user_name creado correctamente.', $vars), 'status');
      watchdog('proxecto13', 'Usuario %user_name creado correctamente.', $vars);
      drupal_goto('proxecto13');
    }
    else {
      // Apareceu algún erro ao procesar o formularios.
      $message = array('%user_name' => $user_name);
      drupal_set_message(t('Apareceu un erro ao tentar crear a conta de usuario: %user_name.', $vars), 'error');
      watchdog('proxecto13', 'Apareceu un erro ao tentar crear a conta de usuario: %user_name.', $vars);
    }
  }
  catch (Exception $e) {
    // Tentouse engadir un usuario co nome duplicado no sistema.
    drupal_set_message($e->getMessage(), 'error');
    watchdog('proxecto13', 'Erro: %erro', array('%erro' => $e->getMessage()));
  }

}

/**
 * Implements hook_form_alter().
 */
function proxecto13_form_alter(&$form, &$form_state, $form_id) {
  if ('user_profile_form' == $form_id) {
    drupal_set_title(t('Modificación perfíl proxecto OSL'));
  }
}
